<?xml version="1.0" encoding="utf-8"?>

<!-- NLog Configuration 
      See https://github.com/NLog/NLog/wiki/Configuration-file for full details -->

<nlog xmlns="http://www.nlog-project.org/schemas/NLog.xsd"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      autoReload="true">
  
      <!-- Uncomment these to switch on internal NLog troubleshooting! -->
  
      <!--internalLogToConsole="true"-->
      <!--internalLogToConsoleError="true"-->
      <!--internalLogLevel="Trace"-->
      <!--internalLogToTrace="true"-->
      <!--internalLogFile="c:\log.txt"-->
  >

  <targets>
    
    <target xsi:type="Null" name="blackhole" />
    
    <target name="console" xsi:type="Console">
      
      <!-- IMPORTANT: includeMdlc="true" is required in order for all of the information supplied in calls to 
           ILogger.BeginScope (including the call from ILoggerWrapper.BeginScopeWithCommonData) to be
           included within the JSON output to stdout (console).  This is a multithreaded version (see the
           comment "When you work with async, use the MDLC" within
           https://github.com/NLog/NLog/wiki/MDC-Layout-Renderer).  Seeing as many of the Argo Microservices' code
           will likely be async (i.e. many methods with have the async keyword) and given that this includeMdlc
           manages to also grab info that has been logged in on async methods, we should just use this as a 
           matter of course.  There is also an includeMdc which one would expect to work for logging that occurs 
           outside of async methods, but strangely the Core Dev team found that this didn't work (i.e. none of the 
           info passed to ILogger.BeginScope was outputted). -->

      <layout xsi:type="JsonLayout" includeAllProperties="false" includeMdlc="true" maxRecursionLimit="100">
        
        <!-- Fields that use OOTB NLog Layout Renders -->
        
        <attribute name="time" layout="${longdate}" />
        <attribute name="level" layout="${level:upperCase=true}"/>
        <attribute name="logger" layout="${logger}" />
        <attribute name="message" layout="${message}" />
        
        <!-- Exception info -->

        <attribute name="exceptionTypes" layout="${exception:format=Type:maxInnerExceptionLevel=100" />
        <attribute name="exceptions" layout="${exception:format=@:maxInnerExceptionLevel=0}" encode="false"/>
        
        <!-- BeginScope info -->

        <attribute name="EventId" layout="${event-properties:item=EventId:format=@}" encode="false" />
        <attribute name="ErrorRef" layout="${event-properties:item=ErrorRef}" />
        <attribute name="AdditionalInformation" layout="${event-properties:item=AdditionalInformation:format=@}" encode="false" />
      
        <!-- Developers should list any other custom LoggableObject object properties here (see https://github.dxc.com/lm/DXC.LM.SDK.SharedLogging) -->
        
      </layout>
    
    </target>
  
  </targets>

  <rules>

    <!--Skip Microsoft logs and so log only own logs-->
    <logger name="Microsoft.*" minlevel="Trace" writeTo="blackhole" final="true" />
    <logger name="*" minlevel="Debug" writeTo="console" />

  </rules>

</nlog>